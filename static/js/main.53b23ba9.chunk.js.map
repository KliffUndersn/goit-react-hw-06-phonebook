{"version":3,"sources":["components/InputForm/ContactList/ContactList.js","components/InputForm/FilterContacts/FilterContacts.js","components/redux/types.js","components/InputForm/InputForm.js","components/redux/actions.js","components/redux/store.js","App.js","index.js"],"names":["ContactList","filteredContacts","deleteContact","map","e","name","number","onClick","id","FilterContacts","filtered","type","placeholder","onChange","connect","items","filter","dispatch","onSubmit","value","types","payload","onDelete","changiFilter","target","useState","state","setState","handleChange","preventDefault","newName","includes","alert","singleContact","generate","pattern","title","required","toLowerCase","initialStore","contactPercistConfig","key","storage","blacklist","store","createStore","persistReducer","action","composeWithDevTools","persistStore","getState","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53b23ba9.chunk.js","sourcesContent":["import PropTypes from \"prop-types\"\r\n\r\nexport const ContactList = ({filteredContacts, deleteContact }) => {\r\n    // console.log(filteredContacts)\r\n   \r\n    return ( \r\n           \r\n                <> \r\n                 {filteredContacts && \r\n                 <> \r\n                <h3>Contacts</h3>\r\n                <ul>{filteredContacts.map(e => \r\n                <li key={e.id}>{e.name} : {e.number} \r\n                <button onClick={()=>deleteContact(e.id)}>Delete</button></li>)    \r\n                }</ul>\r\n                 </>}\r\n            </>\r\n            \r\n    )\r\n}\r\n\r\nContactList.propTypes={\r\n    filteredContacts:PropTypes.arrayOf(Object).isRequired,\r\n    deleteContact:PropTypes.func.isRequired,\r\n  }","import React from 'react'\r\nimport PropTypes from \"prop-types\"\r\n\r\nexport const FilterContacts = ({filtered}) => {\r\n   return(\r\n      \r\n       <>\r\n          <h2>Find contacts by name</h2>\r\n            <input\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            placeholder=\"start typing\"\r\n            onChange={filtered}\r\n            />\r\n            </>)\r\n}\r\n\r\nFilterContacts.propTypes={\r\n   filtered:PropTypes.func.isRequired\r\n}","export default {\r\n  ADD: 'contacts/add',\r\n  DELETE: 'contacts/delete',\r\n  FILTER: 'contacts/filter',\r\n};\r\n","import { useState } from 'react';\r\nimport { v4 as generate } from 'uuid';\r\nimport { ContactList } from './ContactList/ContactList';\r\nimport { FilterContacts } from './FilterContacts/FilterContacts';\r\nimport { connect } from 'react-redux';\r\nimport { addContact, deleteContact, filterContact } from '../redux/actions';\r\n\r\nconst InputForm = ({ onSubmit, items, onDelete, filter, changiFilter }) => {\r\n  const [state, setState] = useState({\r\n    name: '',\r\n    number: '',\r\n  });\r\n  const handleChange = ({ target }) => {\r\n    setState({ ...state, [target.name]: target.value });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = state;\r\n    const newName = items.map(e => e.name);\r\n    if (newName.includes(e.target.name.value)) {\r\n      return alert(`${e.target.name.value} says hello from chat`);\r\n    }\r\n    const singleContact = {\r\n      id: generate(),\r\n      name,\r\n      number,\r\n    };\r\n    onSubmit(singleContact);\r\n  };\r\n  const filterContacts = e => {\r\n    return items.filter(e => e.name.toLowerCase().includes(filter));\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Phonebook</h1>\r\n        <h2>Name</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n        <h2>Number</h2>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n\r\n      <FilterContacts filtered={changiFilter} />\r\n\r\n      <ContactList\r\n        filteredContacts={filterContacts()}\r\n        deleteContact={onDelete}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ items, filter }) => {\r\n  return {\r\n    items,\r\n    filter,\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: value => dispatch(addContact(value)),\r\n  onDelete: id => dispatch(deleteContact(id)),\r\n  changiFilter: ({ target }) => dispatch(filterContact(target.value)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm);\r\n","import types from './types';\r\n\r\nexport const addContact = contact => {\r\n  return {\r\n    type: types.ADD,\r\n    payload: contact,\r\n  };\r\n};\r\n\r\nexport const deleteContact = id => {\r\n  return {\r\n    type: types.DELETE,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const filterContact = name => {\r\n  return {\r\n    type: types.FILTER,\r\n    payload: name,\r\n  };\r\n};\r\n","import { createStore } from 'redux';\r\nimport types from './types';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst initialStore = {\r\n  filter: '',\r\n  items: [],\r\n};\r\n\r\nconst reducer = (state = initialStore, action) => {\r\n  switch (action.type) {\r\n    case types.ADD:\r\n      return { filter: state.filter, items: [...state.items, action.payload] };\r\n    case types.DELETE:\r\n      return {\r\n        filter: state.filter,\r\n        items: state.items.filter(e => e.id !== action.payload),\r\n      };\r\n    case types.FILTER:\r\n      return { filter: action.payload, items: [...state.items] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst contactPercistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\nconst store = createStore(\r\n  persistReducer(contactPercistConfig, reducer),\r\n  composeWithDevTools(),\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\nexport default store;\r\n","import React from 'react';\r\nimport InputForm from './components/InputForm/InputForm';\r\nimport store from './components/redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nstore.getState();\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Provider store={store}>\r\n        <InputForm />\r\n      </Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}